--- a/src/slic3r/GUI/Tab.cpp
+++ b/src/slic3r/GUI/Tab.cpp
@@ -34,10 +34,12 @@
 #include <boost/algorithm/string/trim.hpp>
 #include <boost/filesystem.hpp>
 #include <boost/filesystem/path.hpp>
 #include <boost/lexical_cast.hpp>
 
+#include <boost/nowide/fstream.hpp>
+
 #include "wxExtensions.hpp"
 #include "PresetComboBoxes.hpp"
 #include <wx/wupdlock.h>
 
 #include <libslic3r/GCodeWriter.hpp>
@@ -1564,11 +1566,11 @@ bool Tab::create_pages(std::string setti
     int height = 0;
     bool logs = false;
 
     //read file
     //std::ifstream filestream(ui_layout_file.c_str());
-    boost::filesystem::ifstream filestream(ui_layout_file);
+    boost::nowide::ifstream filestream(ui_layout_file);
     std::string full_line;
     while (std::getline(filestream, full_line)) {
         //remove spaces
         boost::algorithm::trim(full_line);
         if (full_line.size() < 4 || full_line[0] == '#') continue;
--- a/src/slic3r/GUI/FreeCADDialog.cpp
+++ b/src/slic3r/GUI/FreeCADDialog.cpp
@@ -36,10 +36,12 @@
 #include <boost/iostreams/filtering_stream.hpp>
 #include <boost/log/trivial.hpp>
 #include <boost/property_tree/ptree.hpp>
 #include <boost/property_tree/json_parser.hpp>
 
+#include <boost/nowide/fstream.hpp>
+
 // hack for process.hpp : it uses pid_t to set it as alias of int, but vc_x64_lib (wx thingy) as a '#define pid_t int'
 // and so boost/process has a line 'typedef int int'instead of 'typedef int pid_t' that makes it crash
 // note: don't put it in a header, as it can create problems. Here it's safe enough to be used, as it's just applied for the process.hpp file and this source code.
 #define pid_t pid_t
 #include <boost/process.hpp>
@@ -90,11 +92,11 @@ namespace GUI {
                 % url
                 % http_status
                 % error;
         })
             .on_complete([&](std::string body, unsigned /* http_status */) {
-            boost::filesystem::fstream file(tmp_path, std::ios::out | std::ios::binary | std::ios::trunc);
+            boost::nowide::fstream file(tmp_path, std::ios::out | std::ios::binary | std::ios::trunc);
             file.write(body.c_str(), body.size());
             file.close();
             boost::filesystem::rename(tmp_path, target_path);
             res = true;
         })
@@ -352,11 +354,11 @@ void FreeCADDialog::load_script(wxComman
 bool FreeCADDialog::load_text_from_file(const boost::filesystem::path &path) {
     if (boost::filesystem::exists(path)) {
         try {
             std::locale loc = boost::locale::generator()("en_US.UTF-8");
             // Open the stream to 'lock' the file.
-            boost::filesystem::ifstream in;
+            boost::nowide::ifstream in;
             in.imbue(loc);
             in.open(path);
             // Obtain the size of the file.
             const uintmax_t sz = boost::filesystem::file_size(path);
             // Create a buffer.
@@ -399,11 +401,11 @@ bool FreeCADDialog::write_text_in_file(c
     try {
         //add text if the saved file exist
         boost::filesystem::create_directories(file.parent_path());
         std::locale loc = boost::locale::generator()("en_US.UTF-8");
         // Open the stream to 'lock' the file.
-        boost::filesystem::ofstream out;
+        boost::nowide::ofstream out;
         out.imbue(loc);
         out.open(file);
         out << towrite;
         out.close();
     }
