--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -19,15 +19,11 @@ else()
     # Use FindPython3 for CMake >=3.12
     find_package(Python3 3.5 REQUIRED COMPONENTS Interpreter Development)
 endif()
 
 find_package(SIP REQUIRED)  # To create Python bindings.
-find_package(libnest2d REQUIRED)  # The library we're creating bindings for.
-find_package(Clipper REQUIRED)  # Dependency of libnest2d.
-find_package(NLopt REQUIRED)  # Dependency of libnest2d.
-find_package(Boost REQUIRED)  # Dependency of libnest2d.
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DLIBNEST2D_GEOMETRIES_clipper -DLIBNEST2D_OPTIMIZERS_nlopt -DLIBNEST2D_THREADING_std")  # Tell libnest2d to use Clipper and NLopt, and standard threads.
+find_package(Libnest2D REQUIRED)  # The library we're creating bindings for.
 
 # Some build options.
 set(CMAKE_CXX_STANDARD 17)
 if(APPLE AND CMAKE_CXX_COMPILER_ID MATCHES "Clang")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
@@ -54,7 +50,7 @@ set(SIP_EXTRA_FILES_DEPEND
     src/Rectangle.sip
     src/String.sip
 )
 
 set(SIP_EXTRA_OPTIONS -g -n PyQt5.sip)  # Always release the GIL before calling C++ methods. -n PyQt5.sip is required to not get the PyCapsule error
-include_directories(src/ ${SIP_INCLUDE_DIRS} ${Python3_INCLUDE_DIRS} ${CLIPPER_INCLUDE_DIRS} ${NLopt_INCLUDE_DIRS} ${LIBNEST2D_INCLUDE_DIRS})
-add_sip_python_module(pynest2d src/Pynest2D.sip ${CLIPPER_LIBRARIES} ${NLopt_LIBRARIES})
+include_directories(src/ ${SIP_INCLUDE_DIRS})
+add_sip_python_module(pynest2d src/Pynest2D.sip Libnest2D::libnest2d_headeronly)
